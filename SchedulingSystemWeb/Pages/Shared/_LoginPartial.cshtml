@using Infrastructure.Models
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
        var user = await UserManager.GetUserAsync(User);
        var profilePictureUrl = user.ProfilePicture; // Assuming you have a property in your user model for the profile picture URL

        <li class="nav-item">
            <div class="d-flex align-items-center">
                <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage" style="font-size: 16px;">
                    @if (!string.IsNullOrEmpty(profilePictureUrl))
                    {
                        <img src="@profilePictureUrl" alt="Profile Picture" style="width: 35px; height: 35px; border-radius: 50%; margin-right: 10px;" />
                    }
                    <span style="vertical-align: middle;">Hello @User.Identity?.Name!</span>
                </a>
                <form class="form-inline ml-auto" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
                    <button type="submit" class="nav-link btn btn-link text-light" style="font-size: 16px;">Logout</button>
                </form>
            </div>
        </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
