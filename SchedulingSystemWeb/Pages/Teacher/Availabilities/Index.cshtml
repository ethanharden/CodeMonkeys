@page
@model SchedulingSystemWeb.Pages.Availabilities.IndexModel
@using System.Globalization
@{
    ViewData["Title"] = "Availability Calendar";
    var firstDayOfMonth = new DateTime(Model.CurrentDate.Year, Model.CurrentDate.Month, 1);
    var lastDayOfMonth = firstDayOfMonth.AddMonths(1).AddDays(-1);
    int daysInMonth = DateTime.DaysInMonth(Model.CurrentDate.Year, Model.CurrentDate.Month);
    int firstDayOfWeek = (int)CultureInfo.CurrentCulture.DateTimeFormat.FirstDayOfWeek;
    int currentDayOfWeek = (int)firstDayOfMonth.DayOfWeek;
    int leadingDays = (currentDayOfWeek - firstDayOfWeek + 7) % 7;
}

<h2 class="text-primary">@ViewData["Title"]</h2>

<!-- Tab navigation buttons -->
<ul class="nav nav-tabs" id="calendarTabs" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="weekly-tab" data-bs-toggle="tab" data-bs-target="#weekly" type="button" role="tab" aria-controls="weekly" aria-selected="true">Weekly</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="monthly-tab" data-bs-toggle="tab" data-bs-target="#monthly" type="button" role="tab" aria-controls="monthly" aria-selected="false">Monthly</button>
    </li>
</ul>
<!-- Tab content -->
<div class="tab-content" id="calendarTabsContent">
    <!-- Weekly Schedule Tab -->
    <div class="tab-pane fade show active" id="weekly" role="tabpanel" aria-labelledby="weekly-tab">
        <div class="container">
            <!-- Weekly Calendar and its navigation buttons -->
            <div class="container">
                <!-- Weekly Calendar -->
                <br>
                <button type="button" class="btn btn-primary" style="float: right; margin-left: 10px;" onclick="location.href='?handler=PreviousWeek'">Previous Week</button>
                <button type="button" class="btn btn-primary" style="float: right; margin-left: 10px;" onclick="location.href='?handler=NextWeek'">Next Week</button>
                <button type="button" class="btn btn-secondary" style="float: right;" onclick="location.href='?handler=Today'">Today</button>
                @if (Model.WeekDays.Any())
                {
                    <h3>@Model.CurrentMonthName Week of @Model.WeekDays.First().ToString("dd") - @Model.WeekDays.Last().ToString("dd")</h3>
                }
                else
                {
                    <h3>@Model.CurrentMonthName</h3>
                }
                <table class="calendar">
                    <thead>
                        <tr class="week-header">
                            <th class="time-header">Time</th>
                            @foreach (var day in Model.WeekDays)
                            {
                                <th class="day-header @((day.Date == DateTime.Today) ? "today" : "")">
                                    @day.ToString("ddd dd")
                                </th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @for (var hour = 0; hour < 24; hour++)
                        {
                            <tr class="week-row">
                                <td class="hour">@hour:00</td>
                                @foreach (var day in Model.WeekDays)
                                {
                                    <td class="hour-cell"></td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    
    <!-- Monthly Schedule Tab -->
    <div class="tab-pane fade" id="monthly" role="tabpanel" aria-labelledby="monthly-tab">
        <div class="container">
            <!-- Monthly Calendar and its navigation buttons -->
             <div class="container">
                <!-- Monthly Calendar -->
                <br />
                <button type="button" class="btn btn-primary" style="float: right; margin-left: 10px;" onclick="location.href='?handler=PreviousMonth'">Previous Month</button>
                <button type="button" class="btn btn-primary" style="float: right; margin-left: 10px;" onclick="location.href='?handler=NextMonth'">Next Month</button>
                <button type="button" class="btn btn-secondary" style="float: right;" onclick="location.href='?handler=TodayMonth'">Today</button>
                <h3>@Model.CurrentMonthName @Model.CurrentDate.Year</h3>
                <table id="monthly-calendar" class="calendar">
                    <thead>
                        <tr class="month-header">
                            @for (int i = 0; i < 7; i++)
                            {
                                <th class="day-header">
                                    @CultureInfo.CurrentCulture.DateTimeFormat.GetAbbreviatedDayName((DayOfWeek)((firstDayOfWeek + i) % 7))
                                </th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < leadingDays + daysInMonth; i++)
                        {
                            if (i % 7 == 0)
                            {
                                @:<tr class="week-row">
                            }
                
                            if (i < leadingDays)
                            {
                                <td class="empty-day"></td>
                            }
                            else
                            {
                                <td class="month-day @(firstDayOfMonth.AddDays(i - leadingDays).Date == DateTime.Today.Date ? "today" : "")">
                                    @firstDayOfMonth.AddDays(i - leadingDays).Day
                                </td>
                            }

                            if ((i + 1) % 7 == 0)
                            {
                                @:</tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Handle the tab switching and also call the Today handler
        document.querySelectorAll('.nav-link').forEach(function(navLink) {
            navLink.addEventListener('click', function (e) {
                let currentTab = new bootstrap.Tab(navLink);
                currentTab.show();

                // Check the id of the clicked tab and call the respective Today handler
                if (navLink.id === 'weekly-tab') {
                    window.location.href = '?handler=Today';
                } else if (navLink.id === 'monthly-tab') {
                    window.location.href = '?handler=TodayMonth';
                }

                e.preventDefault();
            });
        });

        // Original code to set the active tab on page load based on TempData
        document.addEventListener('DOMContentLoaded', (event) => {
            let activeTab = '@TempData["ActiveTab"]';
            if (activeTab === "monthly") {
                new bootstrap.Tab(document.querySelector('#monthly-tab')).show();
            } else {
                new bootstrap.Tab(document.querySelector('#weekly-tab')).show();
            }
        });
    </script>
}




@* This code is just to check that availabilites work with the database
@*
@page
@model SchedulingSystemWeb.Pages.Availabilities.IndexModel

<div class="container">
    <div class="row pt-4">
        <div class="col-6">
            <h2 class="text-primary">Availability List</h2>
        </div>
        <div class="col-6 text-end">
            <a asp-page="Upsert" asp-route-id="0" class="btn btn-primary">
                <i class="bi bi-plus-circle"></i> Create New Availability
            </a>
        </div>
    </div> <!---End of bootstrap row-->

    <table class="table table-bordered table-hover table-striped" style="width:100%">
        <thead>
            <tr>
                <th>Days of Week</th>
                <th>Start Time</th>
                <th>End Time</th>
                <th>Recurring</th>
                <th>End Date</th>
                <th>Unavailable</th>
                <th>&nbsp;</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var obj in Model.objAvailabilitiesList)
            {
            <tr>
                <td>@string.Join(", ", obj.DaysOfWeek)</td>
                <td>@obj.StartTime.ToString("g")</td>
                <td>@obj.EndTime.ToString("g")</td>
                <td>@(obj.Recurring ? "Yes" : "No")</td>
                <td>@(obj.RecurringEndDate?.ToString("d") ?? "N/A")</td>
                <td>
                    <div class="w-75 btn-group" role="group">
                        <a asp-page="Upsert" asp-route-id="@obj.Id" class="btn btn-primary mx-2">
                            <i class="bi bi-pencil-square"></i> Edit
                        </a>
                        <a asp-page="/Availability/Delete" asp-route-id="@obj.Id" class="btn btn-danger mx-2" onclick="return confirm('Are you sure you want to delete this?');">
                            <i class="bi bi-trash-fill"></i> Delete
                        </a>
                    </div>
                </td>
            </tr>
            }
        </tbody>
    </table>
</div>
 *@ 